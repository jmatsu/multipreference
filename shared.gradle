apply plugin: 'maven-publish'
apply plugin: 'signing'

class AndroidConfig {
    def compileSdkVersion = 29
    def minSdkVersion = 16
    def targetSdkVersion = 29
}

class ArtifactConfiguration {
    def user = 'jmatsu'
    def groupId = 'com.github.jmatsu'
    def libraryArtifactId = 'multipreference'
    def processorArtifactId = 'multipreference-processor'
    def libraryDisplayName = 'Runtime library of multipreference'
    def processorDisplayName = 'APT processor of multipreference'
    def description = 'APT library for managing android\'s SharedPreference'
    def websiteUrl = 'https://github.com/jmatsu/multipreference'
}

ext {
    config = new AndroidConfig()
    artifactConfig = new ArtifactConfiguration()
    def versionFile = new File(rootDir, 'VERSION')
    if (versionFile.exists()) {
        versionText = versionFile.text.trim()
        isRelease = versionText =~ /^\d+\.\d+\.\d+$/
        releaseVersion = isRelease ? versionText : "${versionText.split("-")[0]}-SNAPSHOT"
    } else {
        releaseVersion = "0.99.0"
        isRelease = false
    }

    repoUrl = isRelease ? "https://oss.sonatype.org/service/local/staging/deploy/maven2/" : "https://oss.sonatype.org/content/repositories/snapshots/"
    repoUsername = findProperty('nexusUsername')
    repoPassowrd = findProperty('nexusPassword')
}

afterEvaluate {
    signing {
        required { project.ext.isRelease && gradle.taskGraph.hasTask("publishReleasePublicationToMavenRepository") || findProperty("signingRequired") == "true" }

        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        useInMemoryPgpKeys(signingKey, signingPassword)
        publishing.publications.configureEach { publication ->
            sign publication
        }
    }
}