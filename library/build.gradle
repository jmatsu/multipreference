buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android' // only for testing
apply plugin: 'com.novoda.bintray-release'

repositories {
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    implementation "androidx.annotation:annotation:1.1.0"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.amshove.kluent:kluent:$kluentVersion"
}

publish {
    def versionFile = new File(rootDir, 'VERSION')

    userOrg = artifactConfig.user
    groupId = artifactConfig.groupId
    artifactId = artifactConfig.libraryArtifactId

    version = (versionFile.exists() ? versionFile.text : releaseVersionCandidate).trim()
    
    desc = artifactConfig.description
    website = artifactConfig.websiteUrl
    licences = artifactConfig.licenses
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}